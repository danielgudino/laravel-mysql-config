version: "3"
services:
  #PHP Service
  laravel-app:
    build:
      context: .
      dockerfile: ./Dockerfiles/php.Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: laravel-app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./laravel-php/:/var/www
      - ./siteConfig/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./siteConfig/php/php.ini-production:/usr/local/etc/php/php.ini-production
      - ./siteConfig/php/php.ini-development:/usr/local/etc/php/php.ini-development
    networks:
      - Webdevelopment

  #Nginx Service
  laravel-webserver:
    build:
      context: .
      dockerfile: ./Dockerfiles/nginx.Dockerfile
    container_name: laravel-webserver
    restart: unless-stopped
    tty: true
    expose:
      - "80"
    environment:
      - VIRTUAL_HOST=api.laravel.com
    volumes:
      - ./laravel-php/:/var/www
      - ./siteConfig/nginx/conf.d/:/etc/nginx/conf.d/
      - ./siteConfig/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./siteConfig/nginx/fastcgi_params:/etc/nginx/fastcgi_params
    networks:
      - Webdevelopment

  #MySQL Service
  laravel-db:
    image: mysql:8.0.20
    container_name: laravel-db
    restart: unless-stopped
    tty: true
    expose:
      - "3306"
    ports:
      - "33062:3306"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=laravel
      - MYSQL_ROOT_PASSWORD=root
      - SERVICE_TAGS=dev
      - SERVICE_NAME=mysql
    volumes:
      - laraveldbdata:/var/lib/mysql
    networks:
      - Webdevelopment

networks:
  Webdevelopment:
    external: true

volumes:
  laraveldbdata:
    external: true
